(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{276:function(a,s,t){"use strict";t.r(s);var n=t(13),r=Object(n.a)({},(function(){var a=this,s=a._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("ArticleTopAd"),a._v(" "),s("h2",{attrs:{id:"常量-字面量-数字和字符串"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#常量-字面量-数字和字符串"}},[a._v("#")]),a._v(" 常量（字面量）：数字和字符串")]),a._v(" "),s("p",[s("strong",[a._v("常量")]),a._v("也称之为“字面量”，是固定值，不可改变。看见什么，它就是什么。")]),a._v(" "),s("p",[a._v("常量有下面这几种：")]),a._v(" "),s("ul",[s("li",[a._v("数字常量（数值常量）")]),a._v(" "),s("li",[a._v("字符串常量")]),a._v(" "),s("li",[a._v("布尔常量")]),a._v(" "),s("li",[a._v("自定义常量")])]),a._v(" "),s("h3",{attrs:{id:"数字常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#数字常量"}},[a._v("#")]),a._v(" 数字常量")]),a._v(" "),s("p",[a._v("数字常量非常简单，直接写数字就行，不需要任何其他的符号。既可以是整数，也可以是浮点数。")]),a._v(" "),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 不需要加引号")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("996")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 996是整数")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("alert")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.14")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 3.14是浮点数（即带了小数）")]),a._v("\n")])])]),s("h3",{attrs:{id:"字符串常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字符串常量"}},[a._v("#")]),a._v(" 字符串常量")]),a._v(" "),s("p",[a._v("字符串常量就是用单引号或双引号括起来的内容。可以是单词、句子等，一定要加引号。在 JS 中，只要是单引号或双引号括起来的内容，都是字符串常量。")]),a._v(" "),s("p",[a._v("例如：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"996"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"千古壹号，永不止步"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("温馨提示：996 是数字，'996'是字符串。")]),a._v(" "),s("h3",{attrs:{id:"布尔常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#布尔常量"}},[a._v("#")]),a._v(" 布尔常量")]),a._v(" "),s("p",[a._v("布尔常量就是表达"),s("strong",[a._v("真")]),a._v("或者"),s("strong",[a._v("假")]),a._v("，在 JS 中用 true 和 false 来表达。")]),a._v(" "),s("p",[a._v("布尔字面量举例：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token boolean"}},[a._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\tconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("'如果为真，就走这里面的代码"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])])]),s("h3",{attrs:{id:"自定义常量-const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义常量-const"}},[a._v("#")]),a._v(" 自定义常量：const")]),a._v(" "),s("p",[a._v("自定义常量是 ES6 中新增的语法。它的语法格式是这样的：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" 常量名称 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" 常量取值"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("举例：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"千古壹号"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义常量name，它的取值是 千古壹号")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// name =  '许嵩'; // 既然 name 是常量，所以这一行是错误的写法，因为 name 无法被修改为其他的值")]),a._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 打印结果：千古壹号")]),a._v("\n")])])]),s("p",[a._v("后续我们讲 ES6 语法的时候，会深入学习 const 用法。")]),a._v(" "),s("h3",{attrs:{id:"开发技巧-用变量定义常量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#开发技巧-用变量定义常量"}},[a._v("#")]),a._v(" 开发技巧：用变量定义常量")]),a._v(" "),s("p",[a._v("我们一般不会直接使用常量，否则会导致代码冗余、不易维护。如果多个地方要用到同一个常量，那就建议事先定义一个变量，用来保存这个常量；然后在需要的地方去引用这个变量就行了。另外，当我们学习了 ES6 中的 const 之后，还可以使用自定义常量达到目的。")]),a._v(" "),s("h2",{attrs:{id:"变量的概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的概念"}},[a._v("#")]),a._v(" 变量的概念")]),a._v(" "),s("p",[s("strong",[a._v("变量")]),a._v("表示可以被修改的数据。我们通过「变量名」获取数据，甚至修改数据。")]),a._v(" "),s("p",[a._v("变量还可以用来保存常量。")]),a._v(" "),s("p",[s("strong",[a._v("本质")]),a._v("：变量是程序在内存中申请的一块用来存放数据的空间。打个比方，超市里的储物格就是变量, 在不同的时间段里, 储物格中存储的数据可以不一样。")]),a._v(" "),s("h2",{attrs:{id:"变量的定义和赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的定义和赋值"}},[a._v("#")]),a._v(" 变量的定义和赋值")]),a._v(" "),s("p",[a._v("定义变量是在告诉浏览器，我们需要一块内存空间，相当于生成超市里的储物格。")]),a._v(" "),s("p",[a._v("给变量赋值就是往相当于往储物格里塞东西，可能今天上午塞的是面包 🍞，下午就换成了蛋糕 🍰。")]),a._v(" "),s("h3",{attrs:{id:"变量的定义-声明-es5"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的定义-声明-es5"}},[a._v("#")]),a._v(" 变量的定义/声明（ES5）")]),a._v(" "),s("p",[a._v("在 ES6 语法之前，统一使用"),s("code",[a._v("var")]),a._v("关键字来声明一个变量。比如：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义一个名为 name 的变量。name是变量名。")]),a._v("\n")])])]),s("p",[a._v("var 是英语“variable”变量的缩写。后面要加一个空格，空格后面的东西就是“变量名”。")]),a._v(" "),s("p",[a._v("PS："),s("strong",[a._v("在 JavaScript 中，永远都是用 var 来定义变量")]),a._v("（在 ES6 之前），这和 C、Java 等语言不同。")]),a._v(" "),s("h3",{attrs:{id:"变量的定义-声明-es6"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的定义-声明-es6"}},[a._v("#")]),a._v(" 变量的定义/声明（ES6）")]),a._v(" "),s("p",[a._v("在 ES6 语法及之后的版本里，可以使用 "),s("code",[a._v("const")]),a._v("、"),s("code",[a._v("let")]),a._v("关键字来定义一个变量")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义一个常量")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" age"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义一个变量")]),a._v("\n")])])]),s("p",[a._v("如果你想定义一个常量，就用 const；如果你想定义一个变量，就用 let。")]),a._v(" "),s("h3",{attrs:{id:"变量的赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的赋值"}},[a._v("#")]),a._v(" 变量的赋值")]),a._v(" "),s("p",[a._v("变量赋值举例：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"千古壹号"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("综合起来，变量的定义、赋值、取值，举例如下：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义：声明一个变量")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 赋值：往变量中存储数据")]),a._v("\nnum "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("996")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 取值：从变量中获取存储的数据")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h3",{attrs:{id:"合并写法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#合并写法"}},[a._v("#")]),a._v(" 合并写法")]),a._v(" "),s("p",[a._v("变量的定义和赋值，还可以合并写在一起，是实战中常用的写法。举例如下：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ES5语法")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("const")]),a._v(" b "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" hello"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ES6 语法")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("let")]),a._v(" c "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" world"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// ES6 语法")]),a._v("\nc "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" qianguyihao"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 修改 变量 C 的值")]),a._v("\n")])])]),s("p",[a._v("定义一个变量并赋值， 我们称之为"),s("strong",[a._v("变量的初始化")]),a._v("。如下图所示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"http://img.smyhvae.com/20180116_2020.png",alt:""}})]),a._v(" "),s("ul",[s("li",[a._v("定义变量：var 就是一个"),s("strong",[a._v("关键字")]),a._v("，用来定义变量。所谓关键字，就是有特殊功能的单词。")]),a._v(" "),s("li",[a._v("变量赋值：等号表示"),s("strong",[a._v("赋值")]),a._v("，将等号右边的值，赋给左边的变量。")]),a._v(" "),s("li",[a._v("变量名：我们可以给变量起个名字。")])]),a._v(" "),s("h3",{attrs:{id:"变量的初始化【重要】"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量的初始化【重要】"}},[a._v("#")]),a._v(" 变量的初始化【重要】")]),a._v(" "),s("p",[a._v("第一次给变量赋值，称之为“"),s("strong",[a._v("变量的初始化")]),a._v("”，这个概念非常重要。第二次给这个变量赋值（也就是修改这个变量的值）就不叫初始化了。")]),a._v(" "),s("p",[a._v("一个变量如果没有进行初始化（只声明，不赋值），那么这个变量中存储的值是"),s("code",[a._v("undefined")]),a._v("，这个知识点必须知道。")]),a._v(" "),s("p",[a._v("变量的初始化，可以有两种形式，如下。")]),a._v(" "),s("p",[a._v("形式 1：先定义，在赋值。举例：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nname "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"qianguyhihao"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("形式 2：在定义的同时进行初始化。也就是上一小段讲的“合并写法”。举例：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"qianguyihao"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"变量定义和赋值的补充"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量定义和赋值的补充"}},[a._v("#")]),a._v(" 变量定义和赋值的补充")]),a._v(" "),s("h3",{attrs:{id:"修改变量的值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#修改变量的值"}},[a._v("#")]),a._v(" 修改变量的值")]),a._v(" "),s("p",[a._v("一个变量被重新复赋值后，它原有的值就会被覆盖，变量值将以最后一次赋的值为准。")]),a._v(" "),s("p",[a._v("举例：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("110")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 打印结果：110。因为 110 覆盖了 100")]),a._v("\n")])])]),s("h3",{attrs:{id:"同时定义多个变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#同时定义多个变量"}},[a._v("#")]),a._v(" 同时定义多个变量")]),a._v(" "),s("p",[a._v("1、同时定义多个变量时，只需要写一个 var， 多个变量名之间用英文逗号隔开。举例：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 同时定义多个变量")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("2、定义多个变量的同时，分别进行初始化。举例：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 定义多个变量的同时，进行初始化")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" num1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("p",[a._v("如果多个变量初始化的初始化值都是一样的，则可以这样简写：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nnum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 重点在这一行")]),a._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 10")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 10")]),a._v("\n")])])]),s("p",[a._v("上面的写法和下面的写法是有区别的：（注意看打印结果）")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n  num2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// undefined")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 10")]),a._v("\n")])])]),s("h3",{attrs:{id:"变量之间可以相互赋值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量之间可以相互赋值"}},[a._v("#")]),a._v(" 变量之间可以相互赋值")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nnum1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nnum2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" num1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 把 num1 的值拷贝一份，赋值给 num2")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("num2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 10")]),a._v("\n")])])]),s("h3",{attrs:{id:"变量如果重复定义"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量如果重复定义"}},[a._v("#")]),a._v(" 变量如果重复定义")]),a._v(" "),s("p",[a._v("在 ES5 中，如果用 var 定义了同名变量，那么，后定义的变量，会覆盖先定义的变量。举例：")]),a._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"许嵩"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" name "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"千古壹号"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 这里会重新定义一个新的变量 name")]),a._v("\n\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 千古壹号")]),a._v("\n")])])]),s("h3",{attrs:{id:"变量声明和赋值的特殊情况"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#变量声明和赋值的特殊情况"}},[a._v("#")]),a._v(" 变量声明和赋值的特殊情况")]),a._v(" "),s("p",[a._v("变量建议先声明，再使用；否则可能会产生意想不到的结果。具体如下。")]),a._v(" "),s("p",[s("strong",[a._v("写法 1")]),a._v("、先声明，再赋值：（正常）")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\na "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 打印结果：100")]),a._v("\n")])])]),s("p",[s("strong",[a._v("写法 2")]),a._v("、不声明，直接赋值：（正常）")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("a "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 打印结果：100")]),a._v("\n")])])]),s("p",[s("strong",[a._v("写法 3")]),a._v("、只声明，不赋值：（注意，打印 undefined）")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 打印结果：undefined")]),a._v("\n")])])]),s("p",[s("strong",[a._v("写法 4")]),a._v("、不声明，不赋值，直接使用：（会报错）")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[a._v("console"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("a"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// 会报错")]),a._v("\n")])])]),s("p",[a._v("控制台会报错：")]),a._v(" "),s("p",[s("img",{attrs:{src:"http://img.smyhvae.com/20180116_2040.png",alt:""}})]),a._v(" "),s("p",[s("strong",[a._v("补充")]),a._v("：写法 1 和写法 2 虽然都正常，但这两种写法是有区别的，等以后学习了「变量提升」的概念就明白了。大多数情况下，我们都是采用的写法 1。")]),a._v(" "),s("h2",{attrs:{id:"举例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#举例"}},[a._v("#")]),a._v(" 举例")]),a._v(" "),s("p",[s("strong",[a._v("举例")]),a._v("：交换两个变量的值")]),a._v(" "),s("p",[a._v("代码实现：")]),a._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" a2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("var")]),a._v(" temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\ntemp "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\na1 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" a2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\na2 "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" temp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n")])])]),s("h2",{attrs:{id:"最后"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#最后"}},[a._v("#")]),a._v(" 最后")]),a._v(" "),s("p",[a._v("关于变量的命名规则，将在下一篇文章里讲。")])],1)}),[],!1,null,null,null);s.default=r.exports}}]);